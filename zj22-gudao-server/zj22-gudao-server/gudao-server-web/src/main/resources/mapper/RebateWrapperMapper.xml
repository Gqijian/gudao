<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.zj22.gudao.server.web.dao.db.wrap.RebateWrapperMapper" >
  <resultMap id="BaseResultMap" type="me.zj22.gudao.server.web.pojo.dto.Rebate" >
    <id column="rebate_id" property="rebateId" jdbcType="INTEGER" />
    <result column="rebate_ratio" property="rebateRatio" jdbcType="DOUBLE" />
    <result column="available" property="available" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
  </resultMap>
  <select id="findAllRebate" resultMap="BaseResultMap" parameterType="me.zj22.gudao.server.web.pojo.vo.Page">
    SELECT
    rebate_id, rebate_ratio, available, create_time, create_user, update_time, update_user
    FROM rebate ORDER BY create_time DESC limit #{start},#{rows}
  </select>

  <select id="findRebateCount" resultType="java.lang.Integer">
    SELECT COUNT(0) FROM rebate
  </select>

  <!-- 批量删除折扣 -->
  <delete id="delete">
    delete from rebate where rebate_id in
    <foreach collection="array" open="(" close=")" separator="," item="pks">
      #{pks}
    </foreach>
  </delete>

  <!--这里，解冻和冻结都是一样的sql，这里只是为了方便区分才写了两个-->
  <update id="freeze" parameterType="me.zj22.gudao.server.web.pojo.dto.Rebate" >
    update rebate
    set rebate_ratio = #{rebateRatio,jdbcType=DOUBLE},
    available = #{available,jdbcType=TINYINT},
    create_time = #{createTime,jdbcType=BIGINT},
    create_user = #{createUser,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=BIGINT},
    update_user = #{updateUser,jdbcType=VARCHAR}
    where rebate_id = #{rebateId,jdbcType=INTEGER}
  </update>

  <update id="nofreeze" parameterType="me.zj22.gudao.server.web.pojo.dto.Rebate" >
    update rebate
    set rebate_ratio = #{rebateRatio,jdbcType=DOUBLE},
    available = #{available,jdbcType=TINYINT},
    create_time = #{createTime,jdbcType=BIGINT},
    create_user = #{createUser,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=BIGINT},
    update_user = #{updateUser,jdbcType=VARCHAR}
    where rebate_id = #{rebateId,jdbcType=INTEGER}
  </update>
</mapper>